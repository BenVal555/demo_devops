variables:
  SAST_IMAGE_SUFFIX: '-fips'
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"
  
include:
   - template: Security/SAST.gitlab-ci.yml
   - template: Security/Dependency-Scanning.gitlab-ci.yml
   - template: Security/Container-Scanning.gitlab-ci.yml
   - template: Code-Quality.gitlab-ci.yml

stages:
  - compile
  - test
  - build
  - deploy

cache:
  paths:
    - .m2
  key: "${CI_COMMIT_REF_SLUG}"

compile:
  stage: compile
  image: maven:3.9.5-eclipse-temurin-17-alpine
  script:
    - mvn clean install
  artifacts:
    paths:
      - target/*.jar

test:
  stage: test
  image: maven:3.9.5-eclipse-temurin-17-alpine
  script:
    - mvn test
  dependencies:
    - compile
  artifacts:
    reports:
      junit: target/surefire-reports/TEST-*.xml

code_coverage:
  stage: test
  image: maven:3.9.5-eclipse-temurin-17-alpine
  script:
    - mvn verify
  artifacts:
    when: always
    paths:
      - ./target/site/
    expire_in: 30 min

build:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker build -t devops-java .

  only:
    - merge_requests

deploy:
  stage: deploy
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE:latest .
    - docker push $CI_REGISTRY_IMAGE:latest

  only:
    - main
  
deploy_kubernetes:
  stage: deploy
  script:
    - kubectl apply -f deployment.yaml
  only:
    - main

container_scanning:
  parallel:
    matrix:
      - CS_IMAGE:
          ["${CI_REGISTRY_IMAGE}:latest"]

code_quality:
  artifacts:
    paths: ["target/gl-code-quality-report.json"]